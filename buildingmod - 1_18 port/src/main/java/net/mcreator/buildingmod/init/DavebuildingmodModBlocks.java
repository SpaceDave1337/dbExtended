
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.mcreator.buildingmod.init;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.api.distmarker.Dist;

import net.minecraft.world.level.block.Block;

import net.mcreator.buildingmod.block.ZincBoilerBlock;
import net.mcreator.buildingmod.block.YellowSteelWallBlock;
import net.mcreator.buildingmod.block.YellowSteelTrapdoorBlock;
import net.mcreator.buildingmod.block.YellowSteelTankBlock;
import net.mcreator.buildingmod.block.YellowSteelStairsBlock;
import net.mcreator.buildingmod.block.YellowSteelSlabBlock;
import net.mcreator.buildingmod.block.YellowSteelPlatingBlock;
import net.mcreator.buildingmod.block.YellowQuiltedWoolBlock;
import net.mcreator.buildingmod.block.YellowGildedSteelTankBlock;
import net.mcreator.buildingmod.block.YellowGildedBoilerBlock;
import net.mcreator.buildingmod.block.YellowChairBlock;
import net.mcreator.buildingmod.block.YellowBoilerBlock;
import net.mcreator.buildingmod.block.YellowArrowRightBlock;
import net.mcreator.buildingmod.block.YellowArrowLeftBlock;
import net.mcreator.buildingmod.block.WhiteSteelWallBlock;
import net.mcreator.buildingmod.block.WhiteSteelTrapdoorBlock;
import net.mcreator.buildingmod.block.WhiteSteelTankBlock;
import net.mcreator.buildingmod.block.WhiteSteelStairsBlock;
import net.mcreator.buildingmod.block.WhiteSteelSlabBlock;
import net.mcreator.buildingmod.block.WhiteSteelPlatingBlock;
import net.mcreator.buildingmod.block.WhiteQuiltedWoolBlock;
import net.mcreator.buildingmod.block.WhiteGildedSteelTankBlock;
import net.mcreator.buildingmod.block.WhiteGildedBoilerBlock;
import net.mcreator.buildingmod.block.WhiteChairBlock;
import net.mcreator.buildingmod.block.WhiteBoilerBlock;
import net.mcreator.buildingmod.block.VocalsGeneratorBlock;
import net.mcreator.buildingmod.block.VentStraightBlock;
import net.mcreator.buildingmod.block.VentLUpBlock;
import net.mcreator.buildingmod.block.VentLDownBlock;
import net.mcreator.buildingmod.block.VentLBlock;
import net.mcreator.buildingmod.block.VantaBlackBlock;
import net.mcreator.buildingmod.block.UltraWhiteBlock;
import net.mcreator.buildingmod.block.TungstenCarbiteBlock;
import net.mcreator.buildingmod.block.TrackEndBlock;
import net.mcreator.buildingmod.block.ThomasFaceBlock;
import net.mcreator.buildingmod.block.StrippedblockHorizontalBlock;
import net.mcreator.buildingmod.block.StripedblockMiddleBlock;
import net.mcreator.buildingmod.block.StripedblockBlock;
import net.mcreator.buildingmod.block.SteelWallBlock;
import net.mcreator.buildingmod.block.SteelTrapdoorBlock;
import net.mcreator.buildingmod.block.SteelTilesBlock;
import net.mcreator.buildingmod.block.SteelStairsBlock;
import net.mcreator.buildingmod.block.SteelSlabBlock;
import net.mcreator.buildingmod.block.SteelSeemlessBlock;
import net.mcreator.buildingmod.block.SteelPlatingBlock;
import net.mcreator.buildingmod.block.SteelPillarBlock;
import net.mcreator.buildingmod.block.SteelMeshTrapdoorBlock;
import net.mcreator.buildingmod.block.SteelGirderBlock;
import net.mcreator.buildingmod.block.SteelFrameBlock;
import net.mcreator.buildingmod.block.SteelDoorBlock;
import net.mcreator.buildingmod.block.SteelColoumnBlock;
import net.mcreator.buildingmod.block.SteelBlockBlock;
import net.mcreator.buildingmod.block.StarsBlock;
import net.mcreator.buildingmod.block.SoundGeneratorBlock;
import net.mcreator.buildingmod.block.SoftAirBlock;
import net.mcreator.buildingmod.block.Skeleton6Block;
import net.mcreator.buildingmod.block.Skeleton5Block;
import net.mcreator.buildingmod.block.Skeleton4Block;
import net.mcreator.buildingmod.block.Skeleton3Block;
import net.mcreator.buildingmod.block.Skeleton2Block;
import net.mcreator.buildingmod.block.Skeleton1Block;
import net.mcreator.buildingmod.block.ServerRackBlock;
import net.mcreator.buildingmod.block.RubberDuckBlock;
import net.mcreator.buildingmod.block.RockyDirtSlabBlock;
import net.mcreator.buildingmod.block.RockyDirtBlock;
import net.mcreator.buildingmod.block.ReinforcedGlassBlock;
import net.mcreator.buildingmod.block.RedSteelWallBlock;
import net.mcreator.buildingmod.block.RedSteelTrapdoorBlock;
import net.mcreator.buildingmod.block.RedSteelTankBlock;
import net.mcreator.buildingmod.block.RedSteelStairsBlock;
import net.mcreator.buildingmod.block.RedSteelSlabBlock;
import net.mcreator.buildingmod.block.RedSteelPlatingBlock;
import net.mcreator.buildingmod.block.RedQuiltedWoolBlock;
import net.mcreator.buildingmod.block.RedGuildedSteelTankBlock;
import net.mcreator.buildingmod.block.RedGuildedBoilerBlock;
import net.mcreator.buildingmod.block.RedChairBlock;
import net.mcreator.buildingmod.block.RedBoilerBlock;
import net.mcreator.buildingmod.block.RadiationBlockBlock;
import net.mcreator.buildingmod.block.PurpleSteelWallBlock;
import net.mcreator.buildingmod.block.PurpleSteelTrapdoorBlock;
import net.mcreator.buildingmod.block.PurpleSteelTankBlock;
import net.mcreator.buildingmod.block.PurpleSteelStairsBlock;
import net.mcreator.buildingmod.block.PurpleSteelSlabBlock;
import net.mcreator.buildingmod.block.PurpleSteelPlatingBlock;
import net.mcreator.buildingmod.block.PurpleQuiltedWoolBlock;
import net.mcreator.buildingmod.block.PurpleGildedSteelTankBlock;
import net.mcreator.buildingmod.block.PurpleGildedBoilerBlock;
import net.mcreator.buildingmod.block.PurpleChairBlock;
import net.mcreator.buildingmod.block.PurpleBoilerBlock;
import net.mcreator.buildingmod.block.PolishedSteelPlatingBlock;
import net.mcreator.buildingmod.block.PissOnBlock;
import net.mcreator.buildingmod.block.PissOffBlock;
import net.mcreator.buildingmod.block.PinkSteelWallBlock;
import net.mcreator.buildingmod.block.PinkSteelTrapdoorBlock;
import net.mcreator.buildingmod.block.PinkSteelTankBlock;
import net.mcreator.buildingmod.block.PinkSteelStairsBlock;
import net.mcreator.buildingmod.block.PinkSteelSlabBlock;
import net.mcreator.buildingmod.block.PinkSteelPlatingBlock;
import net.mcreator.buildingmod.block.PinkQuiltedWoolBlock;
import net.mcreator.buildingmod.block.PinkGildedSteelTankBlock;
import net.mcreator.buildingmod.block.PinkGildedBoilerBlock;
import net.mcreator.buildingmod.block.PinkChairBlock;
import net.mcreator.buildingmod.block.PinkBoilerBlock;
import net.mcreator.buildingmod.block.PcSetupBlock;
import net.mcreator.buildingmod.block.ParticleGeneratorBlock;
import net.mcreator.buildingmod.block.OrangeSteelWallBlock;
import net.mcreator.buildingmod.block.OrangeSteelTrapdoorBlock;
import net.mcreator.buildingmod.block.OrangeSteelTankBlock;
import net.mcreator.buildingmod.block.OrangeSteelStairsBlock;
import net.mcreator.buildingmod.block.OrangeSteelSlabBlock;
import net.mcreator.buildingmod.block.OrangeSteelPlatingBlock;
import net.mcreator.buildingmod.block.OrangeQuiltedWoolBlock;
import net.mcreator.buildingmod.block.OrangeGildedSteelTankBlock;
import net.mcreator.buildingmod.block.OrangeGildedBoilerBlock;
import net.mcreator.buildingmod.block.OrangeChairBlock;
import net.mcreator.buildingmod.block.OrangeBoilerBlock;
import net.mcreator.buildingmod.block.OnewayStoneBlock;
import net.mcreator.buildingmod.block.OnewaySignBlock;
import net.mcreator.buildingmod.block.OnewayLaboratoryBlockBlock;
import net.mcreator.buildingmod.block.NoEntrySignBlock;
import net.mcreator.buildingmod.block.MagentaSteelWallBlock;
import net.mcreator.buildingmod.block.MagentaSteelTrapdoorBlock;
import net.mcreator.buildingmod.block.MagentaSteelTankBlock;
import net.mcreator.buildingmod.block.MagentaSteelStairsBlock;
import net.mcreator.buildingmod.block.MagentaSteelSlabBlock;
import net.mcreator.buildingmod.block.MagentaSteelPlatingBlock;
import net.mcreator.buildingmod.block.MagentaScreenBlock;
import net.mcreator.buildingmod.block.MagentaQuiltedWoolBlock;
import net.mcreator.buildingmod.block.MagentaGildedSteelTankBlock;
import net.mcreator.buildingmod.block.MagentaGildedBoilerBlock;
import net.mcreator.buildingmod.block.MagentaChairBlock;
import net.mcreator.buildingmod.block.MagentaBoilerBlock;
import net.mcreator.buildingmod.block.LogPileChairBlock;
import net.mcreator.buildingmod.block.LogPile2TopBlock;
import net.mcreator.buildingmod.block.LogPile2BottomBlock;
import net.mcreator.buildingmod.block.LogPile1TopBlock;
import net.mcreator.buildingmod.block.LogPile1BottomBlock;
import net.mcreator.buildingmod.block.LogPalisadeBlock;
import net.mcreator.buildingmod.block.LimeSteelWallBlock;
import net.mcreator.buildingmod.block.LimeSteelTrapdoorBlock;
import net.mcreator.buildingmod.block.LimeSteelTankBlock;
import net.mcreator.buildingmod.block.LimeSteelStairsBlock;
import net.mcreator.buildingmod.block.LimeSteelSlabBlock;
import net.mcreator.buildingmod.block.LimeSteelPlatingBlock;
import net.mcreator.buildingmod.block.LimeQuiltedWoolBlock;
import net.mcreator.buildingmod.block.LimeGildedSteelTankBlock;
import net.mcreator.buildingmod.block.LimeGildedBoilerBlock;
import net.mcreator.buildingmod.block.LimeChairBlock;
import net.mcreator.buildingmod.block.LimeBoilerBlock;
import net.mcreator.buildingmod.block.LightonBlock;
import net.mcreator.buildingmod.block.LightoffBlock;
import net.mcreator.buildingmod.block.LightGraySteelWallBlock;
import net.mcreator.buildingmod.block.LightGraySteelTrapdoorBlock;
import net.mcreator.buildingmod.block.LightGraySteelTankBlock;
import net.mcreator.buildingmod.block.LightGraySteelStairsBlock;
import net.mcreator.buildingmod.block.LightGraySteelSlabBlock;
import net.mcreator.buildingmod.block.LightGraySteelPlatingBlock;
import net.mcreator.buildingmod.block.LightGrayQuiltedWoolBlock;
import net.mcreator.buildingmod.block.LightGrayGildedSteelTankBlock;
import net.mcreator.buildingmod.block.LightGrayGildedBoilerBlock;
import net.mcreator.buildingmod.block.LightGrayChairBlock;
import net.mcreator.buildingmod.block.LightGrayBoilerBlock;
import net.mcreator.buildingmod.block.LightBlueSteelWallBlock;
import net.mcreator.buildingmod.block.LightBlueSteelTrapdoorBlock;
import net.mcreator.buildingmod.block.LightBlueSteelTankBlock;
import net.mcreator.buildingmod.block.LightBlueSteelStairsBlock;
import net.mcreator.buildingmod.block.LightBlueSteelSlabBlock;
import net.mcreator.buildingmod.block.LightBlueSteelPlatingBlock;
import net.mcreator.buildingmod.block.LightBlueQuiltedWoolBlock;
import net.mcreator.buildingmod.block.LightBlueGildedSteelTankBlock;
import net.mcreator.buildingmod.block.LightBlueGildedBoilerBlock;
import net.mcreator.buildingmod.block.LightBlueChairBlock;
import net.mcreator.buildingmod.block.LightBlueBoilerBlock;
import net.mcreator.buildingmod.block.LaboratoryVentBlock;
import net.mcreator.buildingmod.block.LaboratoryStripeBlock;
import net.mcreator.buildingmod.block.LaboratoryRoman5Block;
import net.mcreator.buildingmod.block.LaboratoryRoman1Block;
import net.mcreator.buildingmod.block.LaboratoryRoman10Block;
import net.mcreator.buildingmod.block.LaboratoryRightArrowBlock;
import net.mcreator.buildingmod.block.LaboratoryPanelBlock;
import net.mcreator.buildingmod.block.LaboratoryLeftArrowBlock;
import net.mcreator.buildingmod.block.LaboratoryBlockBlock;
import net.mcreator.buildingmod.block.IsolinearMiddleRedBlock;
import net.mcreator.buildingmod.block.IsolinearMiddleGreenBlock;
import net.mcreator.buildingmod.block.IsolinearMiddleBlueBlock;
import net.mcreator.buildingmod.block.IsolinearFrontRedBlock;
import net.mcreator.buildingmod.block.IsolinearFrontGreenBlock;
import net.mcreator.buildingmod.block.IsolinearFrontBlueBlock;
import net.mcreator.buildingmod.block.IsolinearBackRedBlock;
import net.mcreator.buildingmod.block.IsolinearBackGreenBlock;
import net.mcreator.buildingmod.block.IsolinearBackBlueBlock;
import net.mcreator.buildingmod.block.HardAirBlock;
import net.mcreator.buildingmod.block.HalfLumberVerticalBlock;
import net.mcreator.buildingmod.block.HalfLumberHorizontalBlock;
import net.mcreator.buildingmod.block.HalfLumberDiagonalRightBlock;
import net.mcreator.buildingmod.block.HalfLumberDiagonalLeftBlock;
import net.mcreator.buildingmod.block.HalfLumberBrickVerticalBlock;
import net.mcreator.buildingmod.block.HalfLumberBrickHorizontalBlock;
import net.mcreator.buildingmod.block.HalfLumberBrickDiagonalRightBlock;
import net.mcreator.buildingmod.block.HalfLumberBrickDiagonalLeftBlock;
import net.mcreator.buildingmod.block.HalfLumberBrickBorderBlock;
import net.mcreator.buildingmod.block.HalfLumberBorderBlock;
import net.mcreator.buildingmod.block.GreenSteelWallBlock;
import net.mcreator.buildingmod.block.GreenSteelTrapdoorBlock;
import net.mcreator.buildingmod.block.GreenSteelTankBlock;
import net.mcreator.buildingmod.block.GreenSteelStairsBlock;
import net.mcreator.buildingmod.block.GreenSteelSlabBlock;
import net.mcreator.buildingmod.block.GreenSteelPlatingBlock;
import net.mcreator.buildingmod.block.GreenScreenBlock;
import net.mcreator.buildingmod.block.GreenQuiltedWoolBlock;
import net.mcreator.buildingmod.block.GreenLightOnBlock;
import net.mcreator.buildingmod.block.GreenLightOffBlock;
import net.mcreator.buildingmod.block.GreenGildedSteelTankBlock;
import net.mcreator.buildingmod.block.GreenGildedBoilerBlock;
import net.mcreator.buildingmod.block.GreenChairBlock;
import net.mcreator.buildingmod.block.GreenBoilerBlock;
import net.mcreator.buildingmod.block.GraySteelWallBlock;
import net.mcreator.buildingmod.block.GraySteelTrapdoorBlock;
import net.mcreator.buildingmod.block.GraySteelTankBlock;
import net.mcreator.buildingmod.block.GraySteelStairsBlock;
import net.mcreator.buildingmod.block.GraySteelSlabBlock;
import net.mcreator.buildingmod.block.GraySteelPlatingBlock;
import net.mcreator.buildingmod.block.GrayQuiltedWoolBlock;
import net.mcreator.buildingmod.block.GrayGildedSteelTankBlock;
import net.mcreator.buildingmod.block.GrayGildedBoilerBlock;
import net.mcreator.buildingmod.block.GrayChairBlock;
import net.mcreator.buildingmod.block.GrayBoilerBlock;
import net.mcreator.buildingmod.block.GravelSlabBlock;
import net.mcreator.buildingmod.block.GaugeOuterBlock;
import net.mcreator.buildingmod.block.GaugeInnerBlock;
import net.mcreator.buildingmod.block.FullLogPileBlock;
import net.mcreator.buildingmod.block.ExitSignBlock;
import net.mcreator.buildingmod.block.ElectricityBlockBlock;
import net.mcreator.buildingmod.block.DirtSlabBlock;
import net.mcreator.buildingmod.block.DeathBlockBlock;
import net.mcreator.buildingmod.block.CyanSteelWallBlock;
import net.mcreator.buildingmod.block.CyanSteelTrapdoorBlock;
import net.mcreator.buildingmod.block.CyanSteelTankBlock;
import net.mcreator.buildingmod.block.CyanSteelStairsBlock;
import net.mcreator.buildingmod.block.CyanSteelSlabBlock;
import net.mcreator.buildingmod.block.CyanSteelPlatingBlock;
import net.mcreator.buildingmod.block.CyanQuiltedWoolBlock;
import net.mcreator.buildingmod.block.CyanGildedSteelTankBlock;
import net.mcreator.buildingmod.block.CyanGildedBoilerBlock;
import net.mcreator.buildingmod.block.CyanChairBlock;
import net.mcreator.buildingmod.block.CyanBoilerBlock;
import net.mcreator.buildingmod.block.CutLaboratoryBlockBlock;
import net.mcreator.buildingmod.block.CrossBlockBlock;
import net.mcreator.buildingmod.block.CreateBoilerBlock;
import net.mcreator.buildingmod.block.CowCatcherYellowBlock;
import net.mcreator.buildingmod.block.CowCatcherWhiteBlock;
import net.mcreator.buildingmod.block.CowCatcherRedBlock;
import net.mcreator.buildingmod.block.CowCatcherPurpleBlock;
import net.mcreator.buildingmod.block.CowCatcherPinkBlock;
import net.mcreator.buildingmod.block.CowCatcherOrangeBlock;
import net.mcreator.buildingmod.block.CowCatcherMagentaBlock;
import net.mcreator.buildingmod.block.CowCatcherLimeBlock;
import net.mcreator.buildingmod.block.CowCatcherLightGrayBlock;
import net.mcreator.buildingmod.block.CowCatcherLightBlueBlock;
import net.mcreator.buildingmod.block.CowCatcherGreenBlock;
import net.mcreator.buildingmod.block.CowCatcherGrayBlock;
import net.mcreator.buildingmod.block.CowCatcherCyanBlock;
import net.mcreator.buildingmod.block.CowCatcherBrownBlock;
import net.mcreator.buildingmod.block.CowCatcherBlueBlock;
import net.mcreator.buildingmod.block.CowCatcherBlackBlock;
import net.mcreator.buildingmod.block.CopperCoilBlock;
import net.mcreator.buildingmod.block.CopperBoilerBlock;
import net.mcreator.buildingmod.block.ComputerTerminalSteelBlock;
import net.mcreator.buildingmod.block.ComputerTerminalBlock;
import net.mcreator.buildingmod.block.BrownSteelWallBlock;
import net.mcreator.buildingmod.block.BrownSteelTrapdoorBlock;
import net.mcreator.buildingmod.block.BrownSteelTankBlock;
import net.mcreator.buildingmod.block.BrownSteelStairsBlock;
import net.mcreator.buildingmod.block.BrownSteelSlabBlock;
import net.mcreator.buildingmod.block.BrownSteelPlatingBlock;
import net.mcreator.buildingmod.block.BrownQuiltedWoolBlock;
import net.mcreator.buildingmod.block.BrownGildedSteelTankBlock;
import net.mcreator.buildingmod.block.BrownGildedBoilerBlock;
import net.mcreator.buildingmod.block.BrownChairBlock;
import net.mcreator.buildingmod.block.BrownBoilerBlock;
import net.mcreator.buildingmod.block.BrassBoilerBlock;
import net.mcreator.buildingmod.block.Book2Block;
import net.mcreator.buildingmod.block.Book1Block;
import net.mcreator.buildingmod.block.BlueSteelWallBlock;
import net.mcreator.buildingmod.block.BlueSteelTrapdoorBlock;
import net.mcreator.buildingmod.block.BlueSteelTankBlock;
import net.mcreator.buildingmod.block.BlueSteelStairsBlock;
import net.mcreator.buildingmod.block.BlueSteelSlabBlock;
import net.mcreator.buildingmod.block.BlueSteelPlatingBlock;
import net.mcreator.buildingmod.block.BlueScreenBlock;
import net.mcreator.buildingmod.block.BlueQuiltedWoolBlock;
import net.mcreator.buildingmod.block.BlueLightOnBlock;
import net.mcreator.buildingmod.block.BlueLightOffBlock;
import net.mcreator.buildingmod.block.BlueGildedSteelTankBlock;
import net.mcreator.buildingmod.block.BlueGildedBoilerBlock;
import net.mcreator.buildingmod.block.BlueChairBlock;
import net.mcreator.buildingmod.block.BlueBoilerBlock;
import net.mcreator.buildingmod.block.BlackSteelWallBlock;
import net.mcreator.buildingmod.block.BlackSteelTrapdoorBlock;
import net.mcreator.buildingmod.block.BlackSteelTankBlock;
import net.mcreator.buildingmod.block.BlackSteelStairsBlock;
import net.mcreator.buildingmod.block.BlackSteelSlabBlock;
import net.mcreator.buildingmod.block.BlackSteelPlatingBlock;
import net.mcreator.buildingmod.block.BlackQuiltedWoolBlock;
import net.mcreator.buildingmod.block.BlackGuilderSteelTankBlock;
import net.mcreator.buildingmod.block.BlackGuildedBoilerBlock;
import net.mcreator.buildingmod.block.BlackChairBlock;
import net.mcreator.buildingmod.block.BlackBoilerBlock;
import net.mcreator.buildingmod.block.BiohazardBlockBlock;
import net.mcreator.buildingmod.block.BallastSlabBlock;
import net.mcreator.buildingmod.block.BallastBlock;
import net.mcreator.buildingmod.block.ArrowUpSignBlock;
import net.mcreator.buildingmod.block.ArrowRightSignBlock;
import net.mcreator.buildingmod.block.ArrowReturnSignBlock;
import net.mcreator.buildingmod.block.ArrowLeftSignBlock;
import net.mcreator.buildingmod.block.ArrowDownSignBlock;
import net.mcreator.buildingmod.block.AlarmSignBlock;
import net.mcreator.buildingmod.block.AlarmLightonBlock;
import net.mcreator.buildingmod.block.AlarmLightoffBlock;
import net.mcreator.buildingmod.block.AlarmBlockBlock;
import net.mcreator.buildingmod.DavebuildingmodMod;

public class DavebuildingmodModBlocks {
	public static final DeferredRegister<Block> REGISTRY = DeferredRegister.create(ForgeRegistries.BLOCKS, DavebuildingmodMod.MODID);
	public static final RegistryObject<Block> LIGHTOFF = REGISTRY.register("lightoff", () -> new LightoffBlock());
	public static final RegistryObject<Block> ALARM_LIGHTOFF = REGISTRY.register("alarm_lightoff", () -> new AlarmLightoffBlock());
	public static final RegistryObject<Block> GREEN_LIGHT_OFF = REGISTRY.register("green_light_off", () -> new GreenLightOffBlock());
	public static final RegistryObject<Block> BLUE_LIGHT_OFF = REGISTRY.register("blue_light_off", () -> new BlueLightOffBlock());
	public static final RegistryObject<Block> SOUND_GENERATOR = REGISTRY.register("sound_generator", () -> new SoundGeneratorBlock());
	public static final RegistryObject<Block> PARTICLE_GENERATOR = REGISTRY.register("particle_generator", () -> new ParticleGeneratorBlock());
	public static final RegistryObject<Block> VOCALS_GENERATOR = REGISTRY.register("vocals_generator", () -> new VocalsGeneratorBlock());
	public static final RegistryObject<Block> COPPER_COIL = REGISTRY.register("copper_coil", () -> new CopperCoilBlock());
	public static final RegistryObject<Block> PC_SETUP = REGISTRY.register("pc_setup", () -> new PcSetupBlock());
	public static final RegistryObject<Block> SERVER_RACK = REGISTRY.register("server_rack", () -> new ServerRackBlock());
	public static final RegistryObject<Block> COMPUTER_TERMINAL_STEEL = REGISTRY.register("computer_terminal_steel",
			() -> new ComputerTerminalSteelBlock());
	public static final RegistryObject<Block> COMPUTER_TERMINAL = REGISTRY.register("computer_terminal", () -> new ComputerTerminalBlock());
	public static final RegistryObject<Block> ISOLINEAR_FRONT_BLUE = REGISTRY.register("isolinear_front_blue", () -> new IsolinearFrontBlueBlock());
	public static final RegistryObject<Block> ISOLINEAR_MIDDLE_BLUE = REGISTRY.register("isolinear_middle_blue",
			() -> new IsolinearMiddleBlueBlock());
	public static final RegistryObject<Block> ISOLINEAR_BACK_BLUE = REGISTRY.register("isolinear_back_blue", () -> new IsolinearBackBlueBlock());
	public static final RegistryObject<Block> ISOLINEAR_FRONT_RED = REGISTRY.register("isolinear_front_red", () -> new IsolinearFrontRedBlock());
	public static final RegistryObject<Block> ISOLINEAR_MIDDLE_RED = REGISTRY.register("isolinear_middle_red", () -> new IsolinearMiddleRedBlock());
	public static final RegistryObject<Block> ISOLINEAR_BACK_RED = REGISTRY.register("isolinear_back_red", () -> new IsolinearBackRedBlock());
	public static final RegistryObject<Block> ISOLINEAR_FRONT_GREEN = REGISTRY.register("isolinear_front_green",
			() -> new IsolinearFrontGreenBlock());
	public static final RegistryObject<Block> ISOLINEAR_MIDDLE_GREEN = REGISTRY.register("isolinear_middle_green",
			() -> new IsolinearMiddleGreenBlock());
	public static final RegistryObject<Block> ISOLINEAR_BACK_GREEN = REGISTRY.register("isolinear_back_green", () -> new IsolinearBackGreenBlock());
	public static final RegistryObject<Block> LABORATORY_BLOCK = REGISTRY.register("laboratory_block", () -> new LaboratoryBlockBlock());
	public static final RegistryObject<Block> CUT_LABORATORY_BLOCK = REGISTRY.register("cut_laboratory_block", () -> new CutLaboratoryBlockBlock());
	public static final RegistryObject<Block> LABORATORY_VENT = REGISTRY.register("laboratory_vent", () -> new LaboratoryVentBlock());
	public static final RegistryObject<Block> LABORATORY_PANEL = REGISTRY.register("laboratory_panel", () -> new LaboratoryPanelBlock());
	public static final RegistryObject<Block> LABORATORY_STRIPE = REGISTRY.register("laboratory_stripe", () -> new LaboratoryStripeBlock());
	public static final RegistryObject<Block> LABORATORY_ROMAN_1 = REGISTRY.register("laboratory_roman_1", () -> new LaboratoryRoman1Block());
	public static final RegistryObject<Block> LABORATORY_LEFT_ARROW = REGISTRY.register("laboratory_left_arrow",
			() -> new LaboratoryLeftArrowBlock());
	public static final RegistryObject<Block> LABORATORY_RIGHT_ARROW = REGISTRY.register("laboratory_right_arrow",
			() -> new LaboratoryRightArrowBlock());
	public static final RegistryObject<Block> LABORATORY_ROMAN_5 = REGISTRY.register("laboratory_roman_5", () -> new LaboratoryRoman5Block());
	public static final RegistryObject<Block> LABORATORY_ROMAN_10 = REGISTRY.register("laboratory_roman_10", () -> new LaboratoryRoman10Block());
	public static final RegistryObject<Block> STRIPEDBLOCK = REGISTRY.register("stripedblock", () -> new StripedblockBlock());
	public static final RegistryObject<Block> STRIPPEDBLOCK_HORIZONTAL = REGISTRY.register("strippedblock_horizontal",
			() -> new StrippedblockHorizontalBlock());
	public static final RegistryObject<Block> STRIPEDBLOCK_MIDDLE = REGISTRY.register("stripedblock_middle", () -> new StripedblockMiddleBlock());
	public static final RegistryObject<Block> YELLOW_ARROW_LEFT = REGISTRY.register("yellow_arrow_left", () -> new YellowArrowLeftBlock());
	public static final RegistryObject<Block> YELLOW_ARROW_RIGHT = REGISTRY.register("yellow_arrow_right", () -> new YellowArrowRightBlock());
	public static final RegistryObject<Block> ALARM_BLOCK = REGISTRY.register("alarm_block", () -> new AlarmBlockBlock());
	public static final RegistryObject<Block> RADIATION_BLOCK = REGISTRY.register("radiation_block", () -> new RadiationBlockBlock());
	public static final RegistryObject<Block> BIOHAZARD_BLOCK = REGISTRY.register("biohazard_block", () -> new BiohazardBlockBlock());
	public static final RegistryObject<Block> DEATH_BLOCK = REGISTRY.register("death_block", () -> new DeathBlockBlock());
	public static final RegistryObject<Block> ELECTRICITY_BLOCK = REGISTRY.register("electricity_block", () -> new ElectricityBlockBlock());
	public static final RegistryObject<Block> CROSS_BLOCK = REGISTRY.register("cross_block", () -> new CrossBlockBlock());
	public static final RegistryObject<Block> EXIT_SIGN = REGISTRY.register("exit_sign", () -> new ExitSignBlock());
	public static final RegistryObject<Block> TUNGSTEN_CARBITE = REGISTRY.register("tungsten_carbite", () -> new TungstenCarbiteBlock());
	public static final RegistryObject<Block> STEEL_BLOCK = REGISTRY.register("steel_block", () -> new SteelBlockBlock());
	public static final RegistryObject<Block> STEEL_PLATING = REGISTRY.register("steel_plating", () -> new SteelPlatingBlock());
	public static final RegistryObject<Block> STEEL_PILLAR = REGISTRY.register("steel_pillar", () -> new SteelPillarBlock());
	public static final RegistryObject<Block> STEEL_SEEMLESS = REGISTRY.register("steel_seemless", () -> new SteelSeemlessBlock());
	public static final RegistryObject<Block> POLISHED_STEEL_PLATING = REGISTRY.register("polished_steel_plating",
			() -> new PolishedSteelPlatingBlock());
	public static final RegistryObject<Block> STEEL_TILES = REGISTRY.register("steel_tiles", () -> new SteelTilesBlock());
	public static final RegistryObject<Block> STEEL_STAIRS = REGISTRY.register("steel_stairs", () -> new SteelStairsBlock());
	public static final RegistryObject<Block> STEEL_SLAB = REGISTRY.register("steel_slab", () -> new SteelSlabBlock());
	public static final RegistryObject<Block> STEEL_FRAME = REGISTRY.register("steel_frame", () -> new SteelFrameBlock());
	public static final RegistryObject<Block> STEEL_WALL = REGISTRY.register("steel_wall", () -> new SteelWallBlock());
	public static final RegistryObject<Block> STEEL_COLOUMN = REGISTRY.register("steel_coloumn", () -> new SteelColoumnBlock());
	public static final RegistryObject<Block> STEEL_GIRDER = REGISTRY.register("steel_girder", () -> new SteelGirderBlock());
	public static final RegistryObject<Block> STEEL_DOOR = REGISTRY.register("steel_door", () -> new SteelDoorBlock());
	public static final RegistryObject<Block> STEEL_TRAPDOOR = REGISTRY.register("steel_trapdoor", () -> new SteelTrapdoorBlock());
	public static final RegistryObject<Block> STEEL_MESH_TRAPDOOR = REGISTRY.register("steel_mesh_trapdoor", () -> new SteelMeshTrapdoorBlock());
	public static final RegistryObject<Block> VENT_STRAIGHT = REGISTRY.register("vent_straight", () -> new VentStraightBlock());
	public static final RegistryObject<Block> VENT_L = REGISTRY.register("vent_l", () -> new VentLBlock());
	public static final RegistryObject<Block> VENT_L_UP = REGISTRY.register("vent_l_up", () -> new VentLUpBlock());
	public static final RegistryObject<Block> VENT_L_DOWN = REGISTRY.register("vent_l_down", () -> new VentLDownBlock());
	public static final RegistryObject<Block> WHITE_STEEL_PLATING = REGISTRY.register("white_steel_plating", () -> new WhiteSteelPlatingBlock());
	public static final RegistryObject<Block> WHITE_STEEL_STAIRS = REGISTRY.register("white_steel_stairs", () -> new WhiteSteelStairsBlock());
	public static final RegistryObject<Block> WHITE_STEEL_SLAB = REGISTRY.register("white_steel_slab", () -> new WhiteSteelSlabBlock());
	public static final RegistryObject<Block> WHITE_STEEL_TRAPDOOR = REGISTRY.register("white_steel_trapdoor", () -> new WhiteSteelTrapdoorBlock());
	public static final RegistryObject<Block> WHITE_STEEL_WALL = REGISTRY.register("white_steel_wall", () -> new WhiteSteelWallBlock());
	public static final RegistryObject<Block> WHITE_STEEL_TANK = REGISTRY.register("white_steel_tank", () -> new WhiteSteelTankBlock());
	public static final RegistryObject<Block> WHITE_GILDED_STEEL_TANK = REGISTRY.register("white_gilded_steel_tank",
			() -> new WhiteGildedSteelTankBlock());
	public static final RegistryObject<Block> WHITE_BOILER = REGISTRY.register("white_boiler", () -> new WhiteBoilerBlock());
	public static final RegistryObject<Block> WHITE_GILDED_BOILER = REGISTRY.register("white_gilded_boiler", () -> new WhiteGildedBoilerBlock());
	public static final RegistryObject<Block> COW_CATCHER_WHITE = REGISTRY.register("cow_catcher_white", () -> new CowCatcherWhiteBlock());
	public static final RegistryObject<Block> ORANGE_STEEL_PLATING = REGISTRY.register("orange_steel_plating", () -> new OrangeSteelPlatingBlock());
	public static final RegistryObject<Block> ORANGE_STEEL_STAIRS = REGISTRY.register("orange_steel_stairs", () -> new OrangeSteelStairsBlock());
	public static final RegistryObject<Block> ORANGE_STEEL_SLAB = REGISTRY.register("orange_steel_slab", () -> new OrangeSteelSlabBlock());
	public static final RegistryObject<Block> ORANGE_STEEL_TRAPDOOR = REGISTRY.register("orange_steel_trapdoor",
			() -> new OrangeSteelTrapdoorBlock());
	public static final RegistryObject<Block> ORANGE_STEEL_WALL = REGISTRY.register("orange_steel_wall", () -> new OrangeSteelWallBlock());
	public static final RegistryObject<Block> ORANGE_STEEL_TANK = REGISTRY.register("orange_steel_tank", () -> new OrangeSteelTankBlock());
	public static final RegistryObject<Block> ORANGE_GILDED_STEEL_TANK = REGISTRY.register("orange_gilded_steel_tank",
			() -> new OrangeGildedSteelTankBlock());
	public static final RegistryObject<Block> ORANGE_BOILER = REGISTRY.register("orange_boiler", () -> new OrangeBoilerBlock());
	public static final RegistryObject<Block> ORANGE_GILDED_BOILER = REGISTRY.register("orange_gilded_boiler", () -> new OrangeGildedBoilerBlock());
	public static final RegistryObject<Block> COW_CATCHER_ORANGE = REGISTRY.register("cow_catcher_orange", () -> new CowCatcherOrangeBlock());
	public static final RegistryObject<Block> MAGENTA_STEEL_PLATING = REGISTRY.register("magenta_steel_plating",
			() -> new MagentaSteelPlatingBlock());
	public static final RegistryObject<Block> MAGENTA_STEEL_STAIRS = REGISTRY.register("magenta_steel_stairs", () -> new MagentaSteelStairsBlock());
	public static final RegistryObject<Block> MAGENTA_STEEL_SLAB = REGISTRY.register("magenta_steel_slab", () -> new MagentaSteelSlabBlock());
	public static final RegistryObject<Block> MAGENTA_STEEL_TRAPDOOR = REGISTRY.register("magenta_steel_trapdoor",
			() -> new MagentaSteelTrapdoorBlock());
	public static final RegistryObject<Block> MAGENTA_STEEL_WALL = REGISTRY.register("magenta_steel_wall", () -> new MagentaSteelWallBlock());
	public static final RegistryObject<Block> MAGENTA_STEEL_TANK = REGISTRY.register("magenta_steel_tank", () -> new MagentaSteelTankBlock());
	public static final RegistryObject<Block> MAGENTA_GILDED_STEEL_TANK = REGISTRY.register("magenta_gilded_steel_tank",
			() -> new MagentaGildedSteelTankBlock());
	public static final RegistryObject<Block> MAGENTA_BOILER = REGISTRY.register("magenta_boiler", () -> new MagentaBoilerBlock());
	public static final RegistryObject<Block> MAGENTA_GILDED_BOILER = REGISTRY.register("magenta_gilded_boiler",
			() -> new MagentaGildedBoilerBlock());
	public static final RegistryObject<Block> COW_CATCHER_MAGENTA = REGISTRY.register("cow_catcher_magenta", () -> new CowCatcherMagentaBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_STEEL_PLATING = REGISTRY.register("light_blue_steel_plating",
			() -> new LightBlueSteelPlatingBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_STEEL_STAIRS = REGISTRY.register("light_blue_steel_stairs",
			() -> new LightBlueSteelStairsBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_STEEL_SLAB = REGISTRY.register("light_blue_steel_slab", () -> new LightBlueSteelSlabBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_STEEL_TRAPDOOR = REGISTRY.register("light_blue_steel_trapdoor",
			() -> new LightBlueSteelTrapdoorBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_STEEL_WALL = REGISTRY.register("light_blue_steel_wall", () -> new LightBlueSteelWallBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_STEEL_TANK = REGISTRY.register("light_blue_steel_tank", () -> new LightBlueSteelTankBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_GILDED_STEEL_TANK = REGISTRY.register("light_blue_gilded_steel_tank",
			() -> new LightBlueGildedSteelTankBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_BOILER = REGISTRY.register("light_blue_boiler", () -> new LightBlueBoilerBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_GILDED_BOILER = REGISTRY.register("light_blue_gilded_boiler",
			() -> new LightBlueGildedBoilerBlock());
	public static final RegistryObject<Block> COW_CATCHER_LIGHT_BLUE = REGISTRY.register("cow_catcher_light_blue",
			() -> new CowCatcherLightBlueBlock());
	public static final RegistryObject<Block> YELLOW_STEEL_PLATING = REGISTRY.register("yellow_steel_plating", () -> new YellowSteelPlatingBlock());
	public static final RegistryObject<Block> YELLOW_STEEL_STAIRS = REGISTRY.register("yellow_steel_stairs", () -> new YellowSteelStairsBlock());
	public static final RegistryObject<Block> YELLOW_STEEL_SLAB = REGISTRY.register("yellow_steel_slab", () -> new YellowSteelSlabBlock());
	public static final RegistryObject<Block> YELLOW_STEEL_TRAPDOOR = REGISTRY.register("yellow_steel_trapdoor",
			() -> new YellowSteelTrapdoorBlock());
	public static final RegistryObject<Block> YELLOW_STEEL_WALL = REGISTRY.register("yellow_steel_wall", () -> new YellowSteelWallBlock());
	public static final RegistryObject<Block> YELLOW_STEEL_TANK = REGISTRY.register("yellow_steel_tank", () -> new YellowSteelTankBlock());
	public static final RegistryObject<Block> YELLOW_GILDED_STEEL_TANK = REGISTRY.register("yellow_gilded_steel_tank",
			() -> new YellowGildedSteelTankBlock());
	public static final RegistryObject<Block> YELLOW_BOILER = REGISTRY.register("yellow_boiler", () -> new YellowBoilerBlock());
	public static final RegistryObject<Block> YELLOW_GILDED_BOILER = REGISTRY.register("yellow_gilded_boiler", () -> new YellowGildedBoilerBlock());
	public static final RegistryObject<Block> COW_CATCHER_YELLOW = REGISTRY.register("cow_catcher_yellow", () -> new CowCatcherYellowBlock());
	public static final RegistryObject<Block> LIME_STEEL_PLATING = REGISTRY.register("lime_steel_plating", () -> new LimeSteelPlatingBlock());
	public static final RegistryObject<Block> LIME_STEEL_STAIRS = REGISTRY.register("lime_steel_stairs", () -> new LimeSteelStairsBlock());
	public static final RegistryObject<Block> LIME_STEEL_SLAB = REGISTRY.register("lime_steel_slab", () -> new LimeSteelSlabBlock());
	public static final RegistryObject<Block> LIME_STEEL_TRAPDOOR = REGISTRY.register("lime_steel_trapdoor", () -> new LimeSteelTrapdoorBlock());
	public static final RegistryObject<Block> LIME_STEEL_WALL = REGISTRY.register("lime_steel_wall", () -> new LimeSteelWallBlock());
	public static final RegistryObject<Block> LIME_STEEL_TANK = REGISTRY.register("lime_steel_tank", () -> new LimeSteelTankBlock());
	public static final RegistryObject<Block> LIME_GILDED_STEEL_TANK = REGISTRY.register("lime_gilded_steel_tank",
			() -> new LimeGildedSteelTankBlock());
	public static final RegistryObject<Block> LIME_BOILER = REGISTRY.register("lime_boiler", () -> new LimeBoilerBlock());
	public static final RegistryObject<Block> LIME_GILDED_BOILER = REGISTRY.register("lime_gilded_boiler", () -> new LimeGildedBoilerBlock());
	public static final RegistryObject<Block> COW_CATCHER_LIME = REGISTRY.register("cow_catcher_lime", () -> new CowCatcherLimeBlock());
	public static final RegistryObject<Block> PINK_STEEL_PLATING = REGISTRY.register("pink_steel_plating", () -> new PinkSteelPlatingBlock());
	public static final RegistryObject<Block> PINK_STEEL_STAIRS = REGISTRY.register("pink_steel_stairs", () -> new PinkSteelStairsBlock());
	public static final RegistryObject<Block> PINK_STEEL_SLAB = REGISTRY.register("pink_steel_slab", () -> new PinkSteelSlabBlock());
	public static final RegistryObject<Block> PINK_STEEL_TRAPDOOR = REGISTRY.register("pink_steel_trapdoor", () -> new PinkSteelTrapdoorBlock());
	public static final RegistryObject<Block> PINK_STEEL_WALL = REGISTRY.register("pink_steel_wall", () -> new PinkSteelWallBlock());
	public static final RegistryObject<Block> PINK_STEEL_TANK = REGISTRY.register("pink_steel_tank", () -> new PinkSteelTankBlock());
	public static final RegistryObject<Block> PINK_GILDED_STEEL_TANK = REGISTRY.register("pink_gilded_steel_tank",
			() -> new PinkGildedSteelTankBlock());
	public static final RegistryObject<Block> PINK_BOILER = REGISTRY.register("pink_boiler", () -> new PinkBoilerBlock());
	public static final RegistryObject<Block> PINK_GILDED_BOILER = REGISTRY.register("pink_gilded_boiler", () -> new PinkGildedBoilerBlock());
	public static final RegistryObject<Block> COW_CATCHER_PINK = REGISTRY.register("cow_catcher_pink", () -> new CowCatcherPinkBlock());
	public static final RegistryObject<Block> GRAY_STEEL_PLATING = REGISTRY.register("gray_steel_plating", () -> new GraySteelPlatingBlock());
	public static final RegistryObject<Block> GRAY_STEEL_STAIRS = REGISTRY.register("gray_steel_stairs", () -> new GraySteelStairsBlock());
	public static final RegistryObject<Block> GRAY_STEEL_SLAB = REGISTRY.register("gray_steel_slab", () -> new GraySteelSlabBlock());
	public static final RegistryObject<Block> GRAY_STEEL_TRAPDOOR = REGISTRY.register("gray_steel_trapdoor", () -> new GraySteelTrapdoorBlock());
	public static final RegistryObject<Block> GRAY_STEEL_WALL = REGISTRY.register("gray_steel_wall", () -> new GraySteelWallBlock());
	public static final RegistryObject<Block> GRAY_STEEL_TANK = REGISTRY.register("gray_steel_tank", () -> new GraySteelTankBlock());
	public static final RegistryObject<Block> GRAY_GILDED_STEEL_TANK = REGISTRY.register("gray_gilded_steel_tank",
			() -> new GrayGildedSteelTankBlock());
	public static final RegistryObject<Block> GRAY_BOILER = REGISTRY.register("gray_boiler", () -> new GrayBoilerBlock());
	public static final RegistryObject<Block> GRAY_GILDED_BOILER = REGISTRY.register("gray_gilded_boiler", () -> new GrayGildedBoilerBlock());
	public static final RegistryObject<Block> COW_CATCHER_GRAY = REGISTRY.register("cow_catcher_gray", () -> new CowCatcherGrayBlock());
	public static final RegistryObject<Block> LIGHT_GRAY_STEEL_PLATING = REGISTRY.register("light_gray_steel_plating",
			() -> new LightGraySteelPlatingBlock());
	public static final RegistryObject<Block> LIGHT_GRAY_STEEL_STAIRS = REGISTRY.register("light_gray_steel_stairs",
			() -> new LightGraySteelStairsBlock());
	public static final RegistryObject<Block> LIGHT_GRAY_STEEL_SLAB = REGISTRY.register("light_gray_steel_slab", () -> new LightGraySteelSlabBlock());
	public static final RegistryObject<Block> LIGHT_GRAY_STEEL_TRAPDOOR = REGISTRY.register("light_gray_steel_trapdoor",
			() -> new LightGraySteelTrapdoorBlock());
	public static final RegistryObject<Block> LIGHT_GRAY_STEEL_WALL = REGISTRY.register("light_gray_steel_wall", () -> new LightGraySteelWallBlock());
	public static final RegistryObject<Block> LIGHT_GRAY_STEEL_TANK = REGISTRY.register("light_gray_steel_tank", () -> new LightGraySteelTankBlock());
	public static final RegistryObject<Block> LIGHT_GRAY_GILDED_STEEL_TANK = REGISTRY.register("light_gray_gilded_steel_tank",
			() -> new LightGrayGildedSteelTankBlock());
	public static final RegistryObject<Block> LIGHT_GRAY_BOILER = REGISTRY.register("light_gray_boiler", () -> new LightGrayBoilerBlock());
	public static final RegistryObject<Block> LIGHT_GRAY_GILDED_BOILER = REGISTRY.register("light_gray_gilded_boiler",
			() -> new LightGrayGildedBoilerBlock());
	public static final RegistryObject<Block> COW_CATCHER_LIGHT_GRAY = REGISTRY.register("cow_catcher_light_gray",
			() -> new CowCatcherLightGrayBlock());
	public static final RegistryObject<Block> CYAN_STEEL_PLATING = REGISTRY.register("cyan_steel_plating", () -> new CyanSteelPlatingBlock());
	public static final RegistryObject<Block> CYAN_STEEL_STAIRS = REGISTRY.register("cyan_steel_stairs", () -> new CyanSteelStairsBlock());
	public static final RegistryObject<Block> CYAN_STEEL_SLAB = REGISTRY.register("cyan_steel_slab", () -> new CyanSteelSlabBlock());
	public static final RegistryObject<Block> CYAN_STEEL_TRAPDOOR = REGISTRY.register("cyan_steel_trapdoor", () -> new CyanSteelTrapdoorBlock());
	public static final RegistryObject<Block> CYAN_STEEL_WALL = REGISTRY.register("cyan_steel_wall", () -> new CyanSteelWallBlock());
	public static final RegistryObject<Block> CYAN_STEEL_TANK = REGISTRY.register("cyan_steel_tank", () -> new CyanSteelTankBlock());
	public static final RegistryObject<Block> CYAN_GILDED_STEEL_TANK = REGISTRY.register("cyan_gilded_steel_tank",
			() -> new CyanGildedSteelTankBlock());
	public static final RegistryObject<Block> CYAN_BOILER = REGISTRY.register("cyan_boiler", () -> new CyanBoilerBlock());
	public static final RegistryObject<Block> CYAN_GILDED_BOILER = REGISTRY.register("cyan_gilded_boiler", () -> new CyanGildedBoilerBlock());
	public static final RegistryObject<Block> COW_CATCHER_CYAN = REGISTRY.register("cow_catcher_cyan", () -> new CowCatcherCyanBlock());
	public static final RegistryObject<Block> PURPLE_STEEL_PLATING = REGISTRY.register("purple_steel_plating", () -> new PurpleSteelPlatingBlock());
	public static final RegistryObject<Block> PURPLE_STEEL_STAIRS = REGISTRY.register("purple_steel_stairs", () -> new PurpleSteelStairsBlock());
	public static final RegistryObject<Block> PURPLE_STEEL_SLAB = REGISTRY.register("purple_steel_slab", () -> new PurpleSteelSlabBlock());
	public static final RegistryObject<Block> PURPLE_STEEL_TRAPDOOR = REGISTRY.register("purple_steel_trapdoor",
			() -> new PurpleSteelTrapdoorBlock());
	public static final RegistryObject<Block> PURPLE_STEEL_WALL = REGISTRY.register("purple_steel_wall", () -> new PurpleSteelWallBlock());
	public static final RegistryObject<Block> PURPLE_STEEL_TANK = REGISTRY.register("purple_steel_tank", () -> new PurpleSteelTankBlock());
	public static final RegistryObject<Block> PURPLE_GILDED_STEEL_TANK = REGISTRY.register("purple_gilded_steel_tank",
			() -> new PurpleGildedSteelTankBlock());
	public static final RegistryObject<Block> PURPLE_BOILER = REGISTRY.register("purple_boiler", () -> new PurpleBoilerBlock());
	public static final RegistryObject<Block> PURPLE_GILDED_BOILER = REGISTRY.register("purple_gilded_boiler", () -> new PurpleGildedBoilerBlock());
	public static final RegistryObject<Block> COW_CATCHER_PURPLE = REGISTRY.register("cow_catcher_purple", () -> new CowCatcherPurpleBlock());
	public static final RegistryObject<Block> BLUE_STEEL_PLATING = REGISTRY.register("blue_steel_plating", () -> new BlueSteelPlatingBlock());
	public static final RegistryObject<Block> BLUE_STEEL_STAIRS = REGISTRY.register("blue_steel_stairs", () -> new BlueSteelStairsBlock());
	public static final RegistryObject<Block> BLUE_STEEL_SLAB = REGISTRY.register("blue_steel_slab", () -> new BlueSteelSlabBlock());
	public static final RegistryObject<Block> BLUE_STEEL_TRAPDOOR = REGISTRY.register("blue_steel_trapdoor", () -> new BlueSteelTrapdoorBlock());
	public static final RegistryObject<Block> BLUE_STEEL_WALL = REGISTRY.register("blue_steel_wall", () -> new BlueSteelWallBlock());
	public static final RegistryObject<Block> BLUE_STEEL_TANK = REGISTRY.register("blue_steel_tank", () -> new BlueSteelTankBlock());
	public static final RegistryObject<Block> BLUE_GILDED_STEEL_TANK = REGISTRY.register("blue_gilded_steel_tank",
			() -> new BlueGildedSteelTankBlock());
	public static final RegistryObject<Block> BLUE_BOILER = REGISTRY.register("blue_boiler", () -> new BlueBoilerBlock());
	public static final RegistryObject<Block> BLUE_GILDED_BOILER = REGISTRY.register("blue_gilded_boiler", () -> new BlueGildedBoilerBlock());
	public static final RegistryObject<Block> COW_CATCHER_BLUE = REGISTRY.register("cow_catcher_blue", () -> new CowCatcherBlueBlock());
	public static final RegistryObject<Block> BROWN_STEEL_PLATING = REGISTRY.register("brown_steel_plating", () -> new BrownSteelPlatingBlock());
	public static final RegistryObject<Block> BROWN_STEEL_STAIRS = REGISTRY.register("brown_steel_stairs", () -> new BrownSteelStairsBlock());
	public static final RegistryObject<Block> BROWN_STEEL_SLAB = REGISTRY.register("brown_steel_slab", () -> new BrownSteelSlabBlock());
	public static final RegistryObject<Block> BROWN_STEEL_TRAPDOOR = REGISTRY.register("brown_steel_trapdoor", () -> new BrownSteelTrapdoorBlock());
	public static final RegistryObject<Block> BROWN_STEEL_WALL = REGISTRY.register("brown_steel_wall", () -> new BrownSteelWallBlock());
	public static final RegistryObject<Block> BROWN_STEEL_TANK = REGISTRY.register("brown_steel_tank", () -> new BrownSteelTankBlock());
	public static final RegistryObject<Block> BROWN_GILDED_STEEL_TANK = REGISTRY.register("brown_gilded_steel_tank",
			() -> new BrownGildedSteelTankBlock());
	public static final RegistryObject<Block> BROWN_BOILER = REGISTRY.register("brown_boiler", () -> new BrownBoilerBlock());
	public static final RegistryObject<Block> BROWN_GILDED_BOILER = REGISTRY.register("brown_gilded_boiler", () -> new BrownGildedBoilerBlock());
	public static final RegistryObject<Block> COW_CATCHER_BROWN = REGISTRY.register("cow_catcher_brown", () -> new CowCatcherBrownBlock());
	public static final RegistryObject<Block> GREEN_STEEL_PLATING = REGISTRY.register("green_steel_plating", () -> new GreenSteelPlatingBlock());
	public static final RegistryObject<Block> GREEN_STEEL_STAIRS = REGISTRY.register("green_steel_stairs", () -> new GreenSteelStairsBlock());
	public static final RegistryObject<Block> GREEN_STEEL_SLAB = REGISTRY.register("green_steel_slab", () -> new GreenSteelSlabBlock());
	public static final RegistryObject<Block> GREEN_STEEL_TRAPDOOR = REGISTRY.register("green_steel_trapdoor", () -> new GreenSteelTrapdoorBlock());
	public static final RegistryObject<Block> GREEN_STEEL_WALL = REGISTRY.register("green_steel_wall", () -> new GreenSteelWallBlock());
	public static final RegistryObject<Block> GREEN_STEEL_TANK = REGISTRY.register("green_steel_tank", () -> new GreenSteelTankBlock());
	public static final RegistryObject<Block> GREEN_GILDED_STEEL_TANK = REGISTRY.register("green_gilded_steel_tank",
			() -> new GreenGildedSteelTankBlock());
	public static final RegistryObject<Block> GREEN_BOILER = REGISTRY.register("green_boiler", () -> new GreenBoilerBlock());
	public static final RegistryObject<Block> GREEN_GILDED_BOILER = REGISTRY.register("green_gilded_boiler", () -> new GreenGildedBoilerBlock());
	public static final RegistryObject<Block> COW_CATCHER_GREEN = REGISTRY.register("cow_catcher_green", () -> new CowCatcherGreenBlock());
	public static final RegistryObject<Block> RED_STEEL_PLATING = REGISTRY.register("red_steel_plating", () -> new RedSteelPlatingBlock());
	public static final RegistryObject<Block> RED_STEEL_STAIRS = REGISTRY.register("red_steel_stairs", () -> new RedSteelStairsBlock());
	public static final RegistryObject<Block> RED_STEEL_SLAB = REGISTRY.register("red_steel_slab", () -> new RedSteelSlabBlock());
	public static final RegistryObject<Block> RED_STEEL_TRAPDOOR = REGISTRY.register("red_steel_trapdoor", () -> new RedSteelTrapdoorBlock());
	public static final RegistryObject<Block> RED_STEEL_WALL = REGISTRY.register("red_steel_wall", () -> new RedSteelWallBlock());
	public static final RegistryObject<Block> RED_STEEL_TANK = REGISTRY.register("red_steel_tank", () -> new RedSteelTankBlock());
	public static final RegistryObject<Block> RED_GUILDED_STEEL_TANK = REGISTRY.register("red_guilded_steel_tank",
			() -> new RedGuildedSteelTankBlock());
	public static final RegistryObject<Block> RED_BOILER = REGISTRY.register("red_boiler", () -> new RedBoilerBlock());
	public static final RegistryObject<Block> RED_GUILDED_BOILER = REGISTRY.register("red_guilded_boiler", () -> new RedGuildedBoilerBlock());
	public static final RegistryObject<Block> COW_CATCHER_RED = REGISTRY.register("cow_catcher_red", () -> new CowCatcherRedBlock());
	public static final RegistryObject<Block> BLACK_STEEL_PLATING = REGISTRY.register("black_steel_plating", () -> new BlackSteelPlatingBlock());
	public static final RegistryObject<Block> BLACK_STEEL_STAIRS = REGISTRY.register("black_steel_stairs", () -> new BlackSteelStairsBlock());
	public static final RegistryObject<Block> BLACK_STEEL_SLAB = REGISTRY.register("black_steel_slab", () -> new BlackSteelSlabBlock());
	public static final RegistryObject<Block> BLACK_STEEL_TRAPDOOR = REGISTRY.register("black_steel_trapdoor", () -> new BlackSteelTrapdoorBlock());
	public static final RegistryObject<Block> BLACK_STEEL_WALL = REGISTRY.register("black_steel_wall", () -> new BlackSteelWallBlock());
	public static final RegistryObject<Block> BLACK_STEEL_TANK = REGISTRY.register("black_steel_tank", () -> new BlackSteelTankBlock());
	public static final RegistryObject<Block> BLACK_GUILDER_STEEL_TANK = REGISTRY.register("black_guilder_steel_tank",
			() -> new BlackGuilderSteelTankBlock());
	public static final RegistryObject<Block> BLACK_BOILER = REGISTRY.register("black_boiler", () -> new BlackBoilerBlock());
	public static final RegistryObject<Block> BLACK_GUILDED_BOILER = REGISTRY.register("black_guilded_boiler", () -> new BlackGuildedBoilerBlock());
	public static final RegistryObject<Block> COW_CATCHER_BLACK = REGISTRY.register("cow_catcher_black", () -> new CowCatcherBlackBlock());
	public static final RegistryObject<Block> CREATE_BOILER = REGISTRY.register("create_boiler", () -> new CreateBoilerBlock());
	public static final RegistryObject<Block> COPPER_BOILER = REGISTRY.register("copper_boiler", () -> new CopperBoilerBlock());
	public static final RegistryObject<Block> ZINC_BOILER = REGISTRY.register("zinc_boiler", () -> new ZincBoilerBlock());
	public static final RegistryObject<Block> BRASS_BOILER = REGISTRY.register("brass_boiler", () -> new BrassBoilerBlock());
	public static final RegistryObject<Block> TRACK_END = REGISTRY.register("track_end", () -> new TrackEndBlock());
	public static final RegistryObject<Block> GAUGE_OUTER = REGISTRY.register("gauge_outer", () -> new GaugeOuterBlock());
	public static final RegistryObject<Block> GAUGE_INNER = REGISTRY.register("gauge_inner", () -> new GaugeInnerBlock());
	public static final RegistryObject<Block> THOMAS_FACE = REGISTRY.register("thomas_face", () -> new ThomasFaceBlock());
	public static final RegistryObject<Block> ALARM_SIGN = REGISTRY.register("alarm_sign", () -> new AlarmSignBlock());
	public static final RegistryObject<Block> NO_ENTRY_SIGN = REGISTRY.register("no_entry_sign", () -> new NoEntrySignBlock());
	public static final RegistryObject<Block> ONEWAY_SIGN = REGISTRY.register("oneway_sign", () -> new OnewaySignBlock());
	public static final RegistryObject<Block> ARROW_UP_SIGN = REGISTRY.register("arrow_up_sign", () -> new ArrowUpSignBlock());
	public static final RegistryObject<Block> ARROW_DOWN_SIGN = REGISTRY.register("arrow_down_sign", () -> new ArrowDownSignBlock());
	public static final RegistryObject<Block> ARROW_LEFT_SIGN = REGISTRY.register("arrow_left_sign", () -> new ArrowLeftSignBlock());
	public static final RegistryObject<Block> ARROW_RIGHT_SIGN = REGISTRY.register("arrow_right_sign", () -> new ArrowRightSignBlock());
	public static final RegistryObject<Block> ARROW_RETURN_SIGN = REGISTRY.register("arrow_return_sign", () -> new ArrowReturnSignBlock());
	public static final RegistryObject<Block> BALLAST = REGISTRY.register("ballast", () -> new BallastBlock());
	public static final RegistryObject<Block> BALLAST_SLAB = REGISTRY.register("ballast_slab", () -> new BallastSlabBlock());
	public static final RegistryObject<Block> GRAVEL_SLAB = REGISTRY.register("gravel_slab", () -> new GravelSlabBlock());
	public static final RegistryObject<Block> ROCKY_DIRT = REGISTRY.register("rocky_dirt", () -> new RockyDirtBlock());
	public static final RegistryObject<Block> ROCKY_DIRT_SLAB = REGISTRY.register("rocky_dirt_slab", () -> new RockyDirtSlabBlock());
	public static final RegistryObject<Block> DIRT_SLAB = REGISTRY.register("dirt_slab", () -> new DirtSlabBlock());
	public static final RegistryObject<Block> HALF_LUMBER_BORDER = REGISTRY.register("half_lumber_border", () -> new HalfLumberBorderBlock());
	public static final RegistryObject<Block> HALF_LUMBER_HORIZONTAL = REGISTRY.register("half_lumber_horizontal",
			() -> new HalfLumberHorizontalBlock());
	public static final RegistryObject<Block> HALF_LUMBER_VERTICAL = REGISTRY.register("half_lumber_vertical", () -> new HalfLumberVerticalBlock());
	public static final RegistryObject<Block> HALF_LUMBER_DIAGONAL_LEFT = REGISTRY.register("half_lumber_diagonal_left",
			() -> new HalfLumberDiagonalLeftBlock());
	public static final RegistryObject<Block> HALF_LUMBER_DIAGONAL_RIGHT = REGISTRY.register("half_lumber_diagonal_right",
			() -> new HalfLumberDiagonalRightBlock());
	public static final RegistryObject<Block> HALF_LUMBER_BRICK_BORDER = REGISTRY.register("half_lumber_brick_border",
			() -> new HalfLumberBrickBorderBlock());
	public static final RegistryObject<Block> HALF_LUMBER_BRICK_HORIZONTAL = REGISTRY.register("half_lumber_brick_horizontal",
			() -> new HalfLumberBrickHorizontalBlock());
	public static final RegistryObject<Block> HALF_LUMBER_BRICK_VERTICAL = REGISTRY.register("half_lumber_brick_vertical",
			() -> new HalfLumberBrickVerticalBlock());
	public static final RegistryObject<Block> HALF_LUMBER_BRICK_DIAGONAL_LEFT = REGISTRY.register("half_lumber_brick_diagonal_left",
			() -> new HalfLumberBrickDiagonalLeftBlock());
	public static final RegistryObject<Block> HALF_LUMBER_BRICK_DIAGONAL_RIGHT = REGISTRY.register("half_lumber_brick_diagonal_right",
			() -> new HalfLumberBrickDiagonalRightBlock());
	public static final RegistryObject<Block> FULL_LOG_PILE = REGISTRY.register("full_log_pile", () -> new FullLogPileBlock());
	public static final RegistryObject<Block> LOG_PILE_1_TOP = REGISTRY.register("log_pile_1_top", () -> new LogPile1TopBlock());
	public static final RegistryObject<Block> LOG_PILE_2_BOTTOM = REGISTRY.register("log_pile_2_bottom", () -> new LogPile2BottomBlock());
	public static final RegistryObject<Block> LOG_PILE_2_TOP = REGISTRY.register("log_pile_2_top", () -> new LogPile2TopBlock());
	public static final RegistryObject<Block> LOG_PILE_1_BOTTOM = REGISTRY.register("log_pile_1_bottom", () -> new LogPile1BottomBlock());
	public static final RegistryObject<Block> LOG_PALISADE = REGISTRY.register("log_palisade", () -> new LogPalisadeBlock());
	public static final RegistryObject<Block> LOG_PILE_CHAIR = REGISTRY.register("log_pile_chair", () -> new LogPileChairBlock());
	public static final RegistryObject<Block> BOOK_1 = REGISTRY.register("book_1", () -> new Book1Block());
	public static final RegistryObject<Block> BOOK_2 = REGISTRY.register("book_2", () -> new Book2Block());
	public static final RegistryObject<Block> SKELETON_1 = REGISTRY.register("skeleton_1", () -> new Skeleton1Block());
	public static final RegistryObject<Block> SKELETON_2 = REGISTRY.register("skeleton_2", () -> new Skeleton2Block());
	public static final RegistryObject<Block> SKELETON_3 = REGISTRY.register("skeleton_3", () -> new Skeleton3Block());
	public static final RegistryObject<Block> SKELETON_4 = REGISTRY.register("skeleton_4", () -> new Skeleton4Block());
	public static final RegistryObject<Block> SKELETON_5 = REGISTRY.register("skeleton_5", () -> new Skeleton5Block());
	public static final RegistryObject<Block> SKELETON_6 = REGISTRY.register("skeleton_6", () -> new Skeleton6Block());
	public static final RegistryObject<Block> WHITE_QUILTED_WOOL = REGISTRY.register("white_quilted_wool", () -> new WhiteQuiltedWoolBlock());
	public static final RegistryObject<Block> ORANGE_QUILTED_WOOL = REGISTRY.register("orange_quilted_wool", () -> new OrangeQuiltedWoolBlock());
	public static final RegistryObject<Block> MAGENTA_QUILTED_WOOL = REGISTRY.register("magenta_quilted_wool", () -> new MagentaQuiltedWoolBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_QUILTED_WOOL = REGISTRY.register("light_blue_quilted_wool",
			() -> new LightBlueQuiltedWoolBlock());
	public static final RegistryObject<Block> YELLOW_QUILTED_WOOL = REGISTRY.register("yellow_quilted_wool", () -> new YellowQuiltedWoolBlock());
	public static final RegistryObject<Block> LIME_QUILTED_WOOL = REGISTRY.register("lime_quilted_wool", () -> new LimeQuiltedWoolBlock());
	public static final RegistryObject<Block> PINK_QUILTED_WOOL = REGISTRY.register("pink_quilted_wool", () -> new PinkQuiltedWoolBlock());
	public static final RegistryObject<Block> GRAY_QUILTED_WOOL = REGISTRY.register("gray_quilted_wool", () -> new GrayQuiltedWoolBlock());
	public static final RegistryObject<Block> LIGHT_GRAY_QUILTED_WOOL = REGISTRY.register("light_gray_quilted_wool",
			() -> new LightGrayQuiltedWoolBlock());
	public static final RegistryObject<Block> CYAN_QUILTED_WOOL = REGISTRY.register("cyan_quilted_wool", () -> new CyanQuiltedWoolBlock());
	public static final RegistryObject<Block> PURPLE_QUILTED_WOOL = REGISTRY.register("purple_quilted_wool", () -> new PurpleQuiltedWoolBlock());
	public static final RegistryObject<Block> BLUE_QUILTED_WOOL = REGISTRY.register("blue_quilted_wool", () -> new BlueQuiltedWoolBlock());
	public static final RegistryObject<Block> BROWN_QUILTED_WOOL = REGISTRY.register("brown_quilted_wool", () -> new BrownQuiltedWoolBlock());
	public static final RegistryObject<Block> GREEN_QUILTED_WOOL = REGISTRY.register("green_quilted_wool", () -> new GreenQuiltedWoolBlock());
	public static final RegistryObject<Block> RED_QUILTED_WOOL = REGISTRY.register("red_quilted_wool", () -> new RedQuiltedWoolBlock());
	public static final RegistryObject<Block> BLACK_QUILTED_WOOL = REGISTRY.register("black_quilted_wool", () -> new BlackQuiltedWoolBlock());
	public static final RegistryObject<Block> WHITE_CHAIR = REGISTRY.register("white_chair", () -> new WhiteChairBlock());
	public static final RegistryObject<Block> ORANGE_CHAIR = REGISTRY.register("orange_chair", () -> new OrangeChairBlock());
	public static final RegistryObject<Block> MAGENTA_CHAIR = REGISTRY.register("magenta_chair", () -> new MagentaChairBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_CHAIR = REGISTRY.register("light_blue_chair", () -> new LightBlueChairBlock());
	public static final RegistryObject<Block> YELLOW_CHAIR = REGISTRY.register("yellow_chair", () -> new YellowChairBlock());
	public static final RegistryObject<Block> LIME_CHAIR = REGISTRY.register("lime_chair", () -> new LimeChairBlock());
	public static final RegistryObject<Block> PINK_CHAIR = REGISTRY.register("pink_chair", () -> new PinkChairBlock());
	public static final RegistryObject<Block> GRAY_CHAIR = REGISTRY.register("gray_chair", () -> new GrayChairBlock());
	public static final RegistryObject<Block> LIGHT_GRAY_CHAIR = REGISTRY.register("light_gray_chair", () -> new LightGrayChairBlock());
	public static final RegistryObject<Block> CYAN_CHAIR = REGISTRY.register("cyan_chair", () -> new CyanChairBlock());
	public static final RegistryObject<Block> PURPLE_CHAIR = REGISTRY.register("purple_chair", () -> new PurpleChairBlock());
	public static final RegistryObject<Block> BLUE_CHAIR = REGISTRY.register("blue_chair", () -> new BlueChairBlock());
	public static final RegistryObject<Block> BROWN_CHAIR = REGISTRY.register("brown_chair", () -> new BrownChairBlock());
	public static final RegistryObject<Block> GREEN_CHAIR = REGISTRY.register("green_chair", () -> new GreenChairBlock());
	public static final RegistryObject<Block> RED_CHAIR = REGISTRY.register("red_chair", () -> new RedChairBlock());
	public static final RegistryObject<Block> BLACK_CHAIR = REGISTRY.register("black_chair", () -> new BlackChairBlock());
	public static final RegistryObject<Block> SOFT_AIR = REGISTRY.register("soft_air", () -> new SoftAirBlock());
	public static final RegistryObject<Block> HARD_AIR = REGISTRY.register("hard_air", () -> new HardAirBlock());
	public static final RegistryObject<Block> REINFORCED_GLASS = REGISTRY.register("reinforced_glass", () -> new ReinforcedGlassBlock());
	public static final RegistryObject<Block> ONEWAY_STONE = REGISTRY.register("oneway_stone", () -> new OnewayStoneBlock());
	public static final RegistryObject<Block> ONEWAY_LABORATORY_BLOCK = REGISTRY.register("oneway_laboratory_block",
			() -> new OnewayLaboratoryBlockBlock());
	public static final RegistryObject<Block> VANTA_BLACK = REGISTRY.register("vanta_black", () -> new VantaBlackBlock());
	public static final RegistryObject<Block> STARS = REGISTRY.register("stars", () -> new StarsBlock());
	public static final RegistryObject<Block> ULTRA_WHITE = REGISTRY.register("ultra_white", () -> new UltraWhiteBlock());
	public static final RegistryObject<Block> GREEN_SCREEN = REGISTRY.register("green_screen", () -> new GreenScreenBlock());
	public static final RegistryObject<Block> BLUE_SCREEN = REGISTRY.register("blue_screen", () -> new BlueScreenBlock());
	public static final RegistryObject<Block> MAGENTA_SCREEN = REGISTRY.register("magenta_screen", () -> new MagentaScreenBlock());
	public static final RegistryObject<Block> RUBBER_DUCK = REGISTRY.register("rubber_duck", () -> new RubberDuckBlock());
	public static final RegistryObject<Block> LIGHTON = REGISTRY.register("lighton", () -> new LightonBlock());
	public static final RegistryObject<Block> ALARM_LIGHTON = REGISTRY.register("alarm_lighton", () -> new AlarmLightonBlock());
	public static final RegistryObject<Block> GREEN_LIGHT_ON = REGISTRY.register("green_light_on", () -> new GreenLightOnBlock());
	public static final RegistryObject<Block> BLUE_LIGHT_ON = REGISTRY.register("blue_light_on", () -> new BlueLightOnBlock());
	public static final RegistryObject<Block> PISS_ON = REGISTRY.register("piss_on", () -> new PissOnBlock());
	public static final RegistryObject<Block> PISS_OFF = REGISTRY.register("piss_off", () -> new PissOffBlock());

	@Mod.EventBusSubscriber(bus = Mod.EventBusSubscriber.Bus.MOD, value = Dist.CLIENT)
	public static class ClientSideHandler {
		@SubscribeEvent
		public static void clientSetup(FMLClientSetupEvent event) {
			LightoffBlock.registerRenderLayer();
			AlarmLightoffBlock.registerRenderLayer();
			GreenLightOffBlock.registerRenderLayer();
			BlueLightOffBlock.registerRenderLayer();
			PcSetupBlock.registerRenderLayer();
			IsolinearFrontBlueBlock.registerRenderLayer();
			IsolinearMiddleBlueBlock.registerRenderLayer();
			IsolinearBackBlueBlock.registerRenderLayer();
			IsolinearFrontRedBlock.registerRenderLayer();
			IsolinearMiddleRedBlock.registerRenderLayer();
			IsolinearBackRedBlock.registerRenderLayer();
			IsolinearFrontGreenBlock.registerRenderLayer();
			IsolinearMiddleGreenBlock.registerRenderLayer();
			IsolinearBackGreenBlock.registerRenderLayer();
			ExitSignBlock.registerRenderLayer();
			SteelFrameBlock.registerRenderLayer();
			SteelWallBlock.registerRenderLayer();
			SteelColoumnBlock.registerRenderLayer();
			SteelGirderBlock.registerRenderLayer();
			SteelDoorBlock.registerRenderLayer();
			SteelTrapdoorBlock.registerRenderLayer();
			SteelMeshTrapdoorBlock.registerRenderLayer();
			VentStraightBlock.registerRenderLayer();
			VentLBlock.registerRenderLayer();
			VentLUpBlock.registerRenderLayer();
			VentLDownBlock.registerRenderLayer();
			WhiteSteelTrapdoorBlock.registerRenderLayer();
			WhiteSteelWallBlock.registerRenderLayer();
			WhiteBoilerBlock.registerRenderLayer();
			WhiteGildedBoilerBlock.registerRenderLayer();
			CowCatcherWhiteBlock.registerRenderLayer();
			OrangeSteelTrapdoorBlock.registerRenderLayer();
			OrangeSteelWallBlock.registerRenderLayer();
			OrangeBoilerBlock.registerRenderLayer();
			OrangeGildedBoilerBlock.registerRenderLayer();
			CowCatcherOrangeBlock.registerRenderLayer();
			MagentaSteelTrapdoorBlock.registerRenderLayer();
			MagentaSteelWallBlock.registerRenderLayer();
			MagentaBoilerBlock.registerRenderLayer();
			MagentaGildedBoilerBlock.registerRenderLayer();
			CowCatcherMagentaBlock.registerRenderLayer();
			LightBlueSteelTrapdoorBlock.registerRenderLayer();
			LightBlueSteelWallBlock.registerRenderLayer();
			LightBlueBoilerBlock.registerRenderLayer();
			LightBlueGildedBoilerBlock.registerRenderLayer();
			CowCatcherLightBlueBlock.registerRenderLayer();
			YellowSteelTrapdoorBlock.registerRenderLayer();
			YellowSteelWallBlock.registerRenderLayer();
			YellowBoilerBlock.registerRenderLayer();
			YellowGildedBoilerBlock.registerRenderLayer();
			CowCatcherYellowBlock.registerRenderLayer();
			LimeSteelTrapdoorBlock.registerRenderLayer();
			LimeSteelWallBlock.registerRenderLayer();
			LimeBoilerBlock.registerRenderLayer();
			LimeGildedBoilerBlock.registerRenderLayer();
			CowCatcherLimeBlock.registerRenderLayer();
			PinkSteelTrapdoorBlock.registerRenderLayer();
			PinkSteelWallBlock.registerRenderLayer();
			PinkBoilerBlock.registerRenderLayer();
			PinkGildedBoilerBlock.registerRenderLayer();
			CowCatcherPinkBlock.registerRenderLayer();
			GraySteelTrapdoorBlock.registerRenderLayer();
			GraySteelWallBlock.registerRenderLayer();
			GrayBoilerBlock.registerRenderLayer();
			GrayGildedBoilerBlock.registerRenderLayer();
			CowCatcherGrayBlock.registerRenderLayer();
			LightGraySteelTrapdoorBlock.registerRenderLayer();
			LightGraySteelWallBlock.registerRenderLayer();
			LightGrayBoilerBlock.registerRenderLayer();
			LightGrayGildedBoilerBlock.registerRenderLayer();
			CowCatcherLightGrayBlock.registerRenderLayer();
			CyanSteelTrapdoorBlock.registerRenderLayer();
			CyanSteelWallBlock.registerRenderLayer();
			CyanBoilerBlock.registerRenderLayer();
			CyanGildedBoilerBlock.registerRenderLayer();
			CowCatcherCyanBlock.registerRenderLayer();
			PurpleSteelTrapdoorBlock.registerRenderLayer();
			PurpleSteelWallBlock.registerRenderLayer();
			PurpleBoilerBlock.registerRenderLayer();
			PurpleGildedBoilerBlock.registerRenderLayer();
			CowCatcherPurpleBlock.registerRenderLayer();
			BlueSteelTrapdoorBlock.registerRenderLayer();
			BlueSteelWallBlock.registerRenderLayer();
			BlueBoilerBlock.registerRenderLayer();
			BlueGildedBoilerBlock.registerRenderLayer();
			CowCatcherBlueBlock.registerRenderLayer();
			BrownSteelTrapdoorBlock.registerRenderLayer();
			BrownSteelWallBlock.registerRenderLayer();
			BrownBoilerBlock.registerRenderLayer();
			BrownGildedBoilerBlock.registerRenderLayer();
			CowCatcherBrownBlock.registerRenderLayer();
			GreenSteelTrapdoorBlock.registerRenderLayer();
			GreenSteelWallBlock.registerRenderLayer();
			GreenBoilerBlock.registerRenderLayer();
			GreenGildedBoilerBlock.registerRenderLayer();
			CowCatcherGreenBlock.registerRenderLayer();
			RedSteelTrapdoorBlock.registerRenderLayer();
			RedSteelWallBlock.registerRenderLayer();
			RedBoilerBlock.registerRenderLayer();
			RedGuildedBoilerBlock.registerRenderLayer();
			CowCatcherRedBlock.registerRenderLayer();
			BlackSteelTrapdoorBlock.registerRenderLayer();
			BlackSteelWallBlock.registerRenderLayer();
			BlackBoilerBlock.registerRenderLayer();
			BlackGuildedBoilerBlock.registerRenderLayer();
			CowCatcherBlackBlock.registerRenderLayer();
			CreateBoilerBlock.registerRenderLayer();
			CopperBoilerBlock.registerRenderLayer();
			ZincBoilerBlock.registerRenderLayer();
			BrassBoilerBlock.registerRenderLayer();
			TrackEndBlock.registerRenderLayer();
			GaugeOuterBlock.registerRenderLayer();
			GaugeInnerBlock.registerRenderLayer();
			ThomasFaceBlock.registerRenderLayer();
			AlarmSignBlock.registerRenderLayer();
			NoEntrySignBlock.registerRenderLayer();
			OnewaySignBlock.registerRenderLayer();
			ArrowUpSignBlock.registerRenderLayer();
			ArrowDownSignBlock.registerRenderLayer();
			ArrowLeftSignBlock.registerRenderLayer();
			ArrowRightSignBlock.registerRenderLayer();
			ArrowReturnSignBlock.registerRenderLayer();
			LogPile1TopBlock.registerRenderLayer();
			LogPile2BottomBlock.registerRenderLayer();
			LogPile2TopBlock.registerRenderLayer();
			LogPile1BottomBlock.registerRenderLayer();
			LogPalisadeBlock.registerRenderLayer();
			LogPileChairBlock.registerRenderLayer();
			Book1Block.registerRenderLayer();
			Book2Block.registerRenderLayer();
			Skeleton1Block.registerRenderLayer();
			Skeleton2Block.registerRenderLayer();
			Skeleton3Block.registerRenderLayer();
			Skeleton4Block.registerRenderLayer();
			Skeleton5Block.registerRenderLayer();
			Skeleton6Block.registerRenderLayer();
			WhiteChairBlock.registerRenderLayer();
			OrangeChairBlock.registerRenderLayer();
			MagentaChairBlock.registerRenderLayer();
			LightBlueChairBlock.registerRenderLayer();
			YellowChairBlock.registerRenderLayer();
			LimeChairBlock.registerRenderLayer();
			PinkChairBlock.registerRenderLayer();
			GrayChairBlock.registerRenderLayer();
			LightGrayChairBlock.registerRenderLayer();
			CyanChairBlock.registerRenderLayer();
			PurpleChairBlock.registerRenderLayer();
			BlueChairBlock.registerRenderLayer();
			BrownChairBlock.registerRenderLayer();
			GreenChairBlock.registerRenderLayer();
			RedChairBlock.registerRenderLayer();
			BlackChairBlock.registerRenderLayer();
			SoftAirBlock.registerRenderLayer();
			HardAirBlock.registerRenderLayer();
			ReinforcedGlassBlock.registerRenderLayer();
			OnewayStoneBlock.registerRenderLayer();
			OnewayLaboratoryBlockBlock.registerRenderLayer();
			RubberDuckBlock.registerRenderLayer();
			LightonBlock.registerRenderLayer();
			AlarmLightonBlock.registerRenderLayer();
			GreenLightOnBlock.registerRenderLayer();
			BlueLightOnBlock.registerRenderLayer();
		}
	}
}
